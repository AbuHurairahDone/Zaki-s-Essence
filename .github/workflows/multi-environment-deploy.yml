# Multi-Environment Deployment Workflow for Firebase CI/CD
# Implements industry best practices for environment management

name: Multi-Environment Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - production
          - staging
        default: 'staging'
      confirm_deploy:
        description: 'Type "yes" to confirm deployment'
        required: true
        type: string

# Environment variables available to all jobs
env:
  NODE_VERSION: '18'
  CACHE_KEY: node-modules-${{ github.sha }}

jobs:
  validate_input:
    name: Validate deployment input
    runs-on: ubuntu-latest
    steps:
      - name: Check confirmation
        if: ${{ inputs.confirm_deploy != 'yes' }}
        run: |
          echo "Error: You must type 'yes' to confirm deployment"
          exit 1

  # Call the reusable environment configuration workflow
  get_environment_config:
    name: Get environment configuration
    needs: validate_input
    uses: ./.github/workflows/environment-config.yml
    with:
      environment: ${{ inputs.environment }}

  build_and_deploy:
    name: Build and deploy
    needs: [validate_input, get_environment_config]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Project
        run: npm run build
        env:
          NODE_ENV: ${{ needs.get_environment_config.outputs.node_env }}

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ZAKIS_ESSENCE }}
          channelId: live
          projectId: zakis-essence
          target: ${{ needs.get_environment_config.outputs.firebase_target }}
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

  post_deployment:
    name: Post-deployment tasks
    needs: [build_and_deploy, get_environment_config]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create deployment tag
        run: |
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          TAG_NAME="deploy-${{ inputs.environment }}-${TIMESTAMP}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify deployment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const environment = '${{ inputs.environment }}';
            const timestamp = new Date().toISOString();
            const actor = context.actor;
            const repo = context.repo;
            
            await github.rest.issues.createComment({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: context.issue.number || 1, // Fallback to issue #1 if not in PR context
              body: `## Deployment Notification
              
              * **Environment**: ${environment}
              * **Deployed by**: @${actor}
              * **Timestamp**: ${timestamp}
              * **Target**: ${{ needs.get_environment_config.outputs.firebase_target }}
              
              Deployment completed successfully.
              `
            });